plugins {
    id 'org.asciidoctor.jvm.convert' version '3.3.2'
    id 'org.asciidoctor.jvm.pdf' version '3.3.2'
}

// Read language settings from gradle.properties
def languages = project.findProperty('languages')?.split(',')?.collect { it.trim() } ?: ['DE']

repositories {
    mavenCentral()
}

// Function to load version properties
def loadVersionProperties(language) {
    def props = new Properties()
    def propFile = file("${language}/version.properties")
    if (!propFile.exists()) {
        throw new GradleException("Version properties file not found for language ${language}: ${propFile}")
    }
    propFile.withInputStream { props.load(it) }
    return [
        'revnumber': props.revnumber ?: 'UNKNOWN',
        'revdate': props.revdate ?: 'UNKNOWN',
        'revremark': props.revremark ?: ''
    ]
}

// Collect version info for all languages upfront
def allVersionInfo = languages.collectEntries { lang ->
    [lang, loadVersionProperties(lang)]
}

// Configure common AsciiDoc attributes
ext {
    asciidocAttributes = [
        'source-highlighter': 'coderay',
        'toc': 'left',
        'toclevels': '3',
        'doctype': 'book'
    ]
}

// Print version information at configuration phase
println "\nBuilding arc42 documentation with the following versions:"
allVersionInfo.each { lang, version ->
    println "  ${lang}: Version ${version.revnumber} (${version.revdate}) ${version.revremark}"
}
println ""

// Create HTML and PDF tasks for each configured language
languages.each { language ->
    def versionInfo = allVersionInfo[language]
    
    // Define HTML conversion task for this language
    tasks.register("asciidoctorHtml${language}", org.asciidoctor.gradle.jvm.AsciidoctorTask) {
        sourceDir file("${language}/asciidoc")
        sources {
            include 'arc42-template.adoc'
        }
        outputDir file("build/${language}/html")
        baseDirFollowsSourceDir()
        
        attributes asciidocAttributes + [
            'imagesdir': "${projectDir}/images",
            'revnumber': versionInfo.revnumber,
            'revdate': versionInfo.revdate,
            'revremark': versionInfo.revremark
        ]
        
        doLast {
            println "HTML conversion completed for ${language} (v${versionInfo.revnumber})"
            println "  Output: ${outputDir}"
        }
    }
    
    // Define PDF conversion task for this language
    tasks.register("asciidoctorPdf${language}", org.asciidoctor.gradle.jvm.pdf.AsciidoctorPdfTask) {
        sourceDir file("${language}/asciidoc")
        sources {
            include 'arc42-template.adoc'
        }
        outputDir file("build/${language}/pdf")
        baseDirFollowsSourceDir()
        
        attributes asciidocAttributes + [
            'imagesdir': "${projectDir}/images",
            'pdf-page-size': 'A4',
            'revnumber': versionInfo.revnumber,
            'revdate': versionInfo.revdate,
            'revremark': versionInfo.revremark
        ]
        
        doLast {
            println "PDF conversion completed for ${language} (v${versionInfo.revnumber})"
            println "  Output: ${outputDir}"
        }
    }
}

// Create aggregate tasks for all languages
tasks.register('asciidoctorHtmlAll') {
    description 'Builds HTML for all configured languages'
    group 'Documentation'
    
    doFirst {
        println "\nStarting HTML generation for all languages"
    }
    
    languages.each { language ->
        dependsOn tasks.named("asciidoctorHtml${language}")
    }
    
    doLast {
        println "\nHTML generation completed for all languages"
    }
}

tasks.register('asciidoctorPdfAll') {
    description 'Builds PDF for all configured languages'
    group 'Documentation'
    
    doFirst {
        println "\nStarting PDF generation for all languages"
    }
    
    languages.each { language ->
        dependsOn tasks.named("asciidoctorPdf${language}")
    }
    
    doLast {
        println "\nPDF generation completed for all languages"
    }
}

tasks.register('asciidoctorAll') {
    description 'Builds HTML and PDF for all configured languages'
    group 'Documentation'
    
    dependsOn tasks.named('asciidoctorHtmlAll')
    dependsOn tasks.named('asciidoctorPdfAll')
    
    doLast {
        println "\nDocumentation build summary:"
        allVersionInfo.each { lang, version ->
            println "  ${lang}: Version ${version.revnumber} built to build/${lang}/{html,pdf}"
        }
    }
}

tasks.named('clean') {
    description 'Deletes the build directory'
    group 'Build'
    
    doLast {
        delete 'build'
        println "Build directory cleaned"
    }
}

defaultTasks 'asciidoctorAll'

gradle.taskGraph.whenReady { taskGraph ->
    if (taskGraph.hasTask(':asciidoctorAll') || 
        taskGraph.hasTask(':asciidoctorHtmlAll') || 
        taskGraph.hasTask(':asciidoctorPdfAll')) {
        println "\nBuilding arc42 documentation with the following configuration:"
        println "  Languages: ${languages.join(', ')}"
        println "  Source directories: ${languages.collect { "${it}/asciidoc" }.join(', ')}"
        println "  Main file: arc42-template.adoc"
    }
}